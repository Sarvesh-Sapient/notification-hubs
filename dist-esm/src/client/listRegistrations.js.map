{"version":3,"file":"listRegistrations.js","sourceRoot":"","sources":["../../../src/client/listRegistrations.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { createRequest, sendRequest } from \"./internal/_client.js\";\nimport { NotificationHubsClientContext } from \"./index.js\";\nimport { PagedAsyncIterableIterator } from \"@azure/core-paging\";\nimport { RegistrationDescription } from \"../models/registration.js\";\nimport { RegistrationQueryOptions } from \"../models/options.js\";\nimport { RegistrationQueryResponse } from \"../models/response.js\";\nimport { registrationDescriptionParser } from \"../serializers/registrationSerializer.js\";\nimport { tracingClient } from \"../utils/tracing.js\";\n\n/**\n * Gets all registrations for the notification hub with the given query options.\n * @param context - The Notification Hubs client.\n * @param options - The options for querying the registrations such as $top and $filter.\n * @returns A paged async iterable containing all of the registrations for the notification hub.\n */\nexport function listRegistrations(\n  context: NotificationHubsClientContext,\n  options: RegistrationQueryOptions = {}\n): PagedAsyncIterableIterator<RegistrationDescription> {\n  const { span, updatedOptions } = tracingClient.startSpan(\n    \"NotificationHubsClientContext-listRegistrations\",\n    options\n  );\n  try {\n    const iter = listRegistrationsAll(context, updatedOptions);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: () => {\n        return listRegistrationPagingPage(context, options);\n      },\n    };\n  } catch (e: any) {\n    span.setStatus({ status: \"error\", error: e });\n    throw e;\n  } finally {\n    span.end();\n  }\n}\n\nasync function* listRegistrationsAll(\n  context: NotificationHubsClientContext,\n  options: RegistrationQueryOptions\n): AsyncIterableIterator<RegistrationDescription> {\n  for await (const page of listRegistrationPagingPage(context, options)) {\n    yield* page;\n  }\n}\n\nasync function* listRegistrationPagingPage(\n  context: NotificationHubsClientContext,\n  options: RegistrationQueryOptions\n): AsyncIterableIterator<RegistrationDescription[]> {\n  let result = await _listRegistrations(context, options);\n  yield result.registrations || [];\n  let continuationToken = result.continuationToken;\n  while (continuationToken) {\n    result = await _listRegistrations(context, options, continuationToken);\n    continuationToken = result.continuationToken;\n    yield result.registrations || [];\n  }\n}\n\nasync function _listRegistrations(\n  context: NotificationHubsClientContext,\n  options: RegistrationQueryOptions,\n  continuationToken?: string\n): Promise<RegistrationQueryResponse> {\n  const endpoint = context.requestUrl();\n  endpoint.pathname += \"/registrations\";\n  if (options.top !== undefined) {\n    endpoint.searchParams.set(\"$top\", `${options.top}`);\n  }\n\n  if (options.filter !== undefined) {\n    endpoint.searchParams.set(\"$filter\", options.filter);\n  }\n\n  if (continuationToken !== undefined) {\n    endpoint.searchParams.set(\"continuationtoken\", continuationToken);\n  }\n\n  const headers = context.createHeaders();\n\n  const request = createRequest(endpoint, \"GET\", headers, options);\n  const response = await sendRequest(context, request, 200);\n\n  const registrations = await registrationDescriptionParser.parseRegistrationFeed(\n    response.bodyAsText!\n  );\n  const nextToken = response.headers.get(\"x-ms-continuationtoken\");\n  return {\n    registrations,\n    continuationToken: nextToken,\n  };\n}\n"]}